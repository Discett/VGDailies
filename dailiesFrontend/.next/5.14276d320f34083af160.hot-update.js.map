{"version":3,"file":"5.14276d320f34083af160.hot-update.js","sources":["webpack:///pages/login.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {credentials} from './credentials';\r\nimport Link from 'next/link';\r\nimport Router from 'next/router';\r\nimport {weblinks} from './weblinks';\r\nimport {Paper, Grid, Button, AppBar, TextField, Typography} from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport DailyAppBar from './dailyAppBar'\r\n\r\nconst styles = {\r\n    root:{\r\n        backgroundImage: \"url('/static/wavesBackground.jpg')\",\r\n        backgroundColor: 'gray',\r\n        margin: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        top: 0,\r\n        padding: 0,\r\n        overflow: 'hidden',\r\n        height: '100%',\r\n        width: '100%',\r\n        position: 'absolute',\r\n    },\r\n    paperBackground: {\r\n        backgroundColor: 'white',\r\n        opacity: '0.8',\r\n        padding: 50,\r\n    }\r\n}\r\n\r\n/*\r\nconst loginStyle = {\r\n    WebkitTransition: 'all',\r\n    msTransition: 'all',\r\n    height: '100%',\r\n    width: '100%',\r\n    margin: -8,\r\n    position: 'absolute',\r\n    backgroundColor: 'Gray',\r\n};\r\n\r\nconst formStyle = {\r\n    WebkitTransition: 'all',\r\n    msTransition: 'all',\r\n    //top: '50%',\r\n    display: 'block',\r\n    //left:'50%',\r\n    //margin: '-70px 0 0 -170px',\r\n    margin: '50px auto',\r\n    position: 'absolute',\r\n    backgroundColor: 'White',\r\n};\r\n*/\r\nconst strings = {\r\n    EnterUserName: 'Username:',\r\n    EnterPassword: 'Password:',\r\n    LoginHeader: 'Login Page',\r\n    Submit: 'Submit',\r\n}\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            userSubmittedUsername: '',\r\n            userSubmittedPassword: '',\r\n        };\r\n        this.handleChangeUser     = this.handleChangeUser.bind(this);\r\n        this.handleChangePassword = this.handleChangePassword.bind(this);\r\n        this.handleSubmit         = this.handleSubmit.bind(this);\r\n    }\r\n    //Listener, whenever username is changed update the state\r\n    handleChangeUser(e){\r\n        this.setState({userSubmittedUsername: e.target.value});\r\n    }\r\n    //Listener, whenever password is changed update the state\r\n    handleChangePassword(e){\r\n        this.setState({userSubmittedPassword: e.target.value});\r\n    }\r\n    //Is called when form is submitted\r\n    handleSubmit(e){\r\n        //required to prevent default behavior required for CORS\r\n        e.preventDefault();\r\n        console.log(this.url);\r\n        //set the username, token is only set if successfully logged in\r\n        <credentialsContext>\r\n            {credentials.user.username = this.state.userSubmittedUsername}\r\n        </credentialsContext>\r\n        //query database recieves a response of token or incorrect username/password\r\n        axios({\r\n            method: 'post',\r\n            url: weblinks.link.loginUrl,\r\n            data: {\r\n                userSubmittedUsername: this.state.userSubmittedUsername,\r\n                userSubmittedPassword: this.state.userSubmittedPassword,\r\n            },\r\n            headers: {'Accept': 'token'}\r\n        })\r\n        .then(function (response){\r\n            //okay reponse on accept and fail here\r\n            console.log(response);\r\n            if(response.data != \"incorrect username or password\"){\r\n                <credentialsContext>\r\n                    {credentials.user.token = response.data}\r\n                </credentialsContext>\r\n                Router.push('/dailytracker')\r\n            }\r\n        })\r\n        .catch(function (error){\r\n            //if error do just clear fields and display mismatch user or password\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <Grid container className={this.props.classes.root}>\r\n                <Grid container direction = 'column' alignItems='flex-start' justify='space-between'>\r\n                    <DailyAppBar name={strings.LoginHeader}/>\r\n                </Grid>\r\n\r\n                <Grid\r\n                    container justify='center'alignItems='center'direction='column' position='static'style={{minHeight: '90vh'}} >\r\n                    <Paper className={this.props.classes.paperBackground}>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <Typography color='textSecondary'>{strings.EnterUserName}</Typography>\r\n                            <TextField name='username' onChange={this.handleChangeUser} label={strings.Username}/>\r\n                            <Typography color='textSecondary'>{strings.EnterPassword}</Typography>\r\n                            <TextField name='password' type='password' onChange={this.handleChangePassword}/>\r\n                            <Button type='submit' color='primary' variant='text' size='large'>{strings.Submit}</Button>\r\n                        </form>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Login);\r\n\n\n\n// WEBPACK FOOTER //\n// pages/login.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AAHA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;AAtBA;AA6CA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AARA;AASA;AACA;AACA;;;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAPA;AAUA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AA7EA;AACA;AA+EA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}