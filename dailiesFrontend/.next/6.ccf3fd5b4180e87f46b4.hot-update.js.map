{"version":3,"file":"6.ccf3fd5b4180e87f46b4.hot-update.js","sources":["webpack:///pages/dailydata.js"],"sourcesContent":["import React, { Component } from 'react';\r\n//import axios from 'axios';\r\nimport {credentials} from './credentials';\r\nimport ReactDOM from 'react-dom';\r\nimport Modal from 'react-modal';\r\nimport {weblinks} from './weblinks';\r\nimport axios from 'axios';\r\n\r\n//import dailydatastyles from './styles/dailydatastyles.css'\r\n\r\n//DailyData: will contain the data for the user's dailies\r\n//contains view that will load the information\r\n//also a textbox, time in which the daily resets, and submit button\r\n\r\n//TODO: eventually implement daylight savings\r\n//TODO: switch statement per game since JSON's per game is case by case\r\n//TODO: specific games would need their own class to display data in DailyDataBox\r\n\r\n//TODO: add didReset to frontend\r\n//TODO: reroute back to login when refreshed\r\nconst customStyles = {\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        height                : '500px',\r\n        overflow              : 'auto'\r\n      }\r\n};\r\n\r\n//Modal.setAppElement(el)\r\n\r\n//needs to display that and handle delete button\r\n//needs more css to move button to the right\r\nclass ModalRow extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.handleRemove = this.handleRemove.bind(this);\r\n    }\r\n\r\n    handleRemove(e){\r\n        console.log('Remove');\r\n        axios({\r\n            method: 'post',\r\n            url: weblinks.link.removeDailies,\r\n            data: {\r\n                username:   credentials.user.username,\r\n                token:      credentials.user.token,\r\n                title:      this.props.data.title,\r\n            },\r\n        })\r\n        .then(function (response){\r\n            //update UI\r\n            //forceupdate component\r\n            this.props.updateRemove(this.props.data.title);\r\n            console.log(response);\r\n        }.bind(this))\r\n        .catch(function (error){\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const data = this.props.data;\r\n        const title = data.title;\r\n        return(\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <button onClick={this.handleRemove}>remove</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n//query database for info add to row and loop\r\nclass ModalContainer extends Component {\r\n    state = {\r\n        rows:[]\r\n    }\r\n    //this is before render\r\n    componentDidMount(){\r\n        this.setState({rows:this.props.data});\r\n    }\r\n    render(){\r\n        const display = [];\r\n        this.state.rows.forEach((row)=>{\r\n            display.push(<ModalRow data={row.fields} key={row.fields.title} updateRemove={this.props.updateRemove}/>);\r\n        });\r\n        return(\r\n            <div>{display}</div>\r\n        );\r\n    }\r\n}\r\n\r\nclass DailyRow extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.showFinishDaily = this.showFinishDaily.bind(this);\r\n    }\r\n\r\n    showFinishDaily(){\r\n        \r\n    }\r\n    render(){\r\n        const data = this.props.data;\r\n        const title = data.title;\r\n\r\n        return(\r\n            <tr>\r\n                <td>{title}</td>\r\n                {this.showFinishDaily}\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nclass AddDailyInformation extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            modalIsOpen: false,\r\n            title:'',\r\n            time:'',\r\n        };\r\n        this.openModal          = this.openModal.bind(this);\r\n        this.afterOpenModal     = this.afterOpenModal.bind(this);\r\n        this.closeModal         = this.closeModal.bind(this);\r\n        this.handleSubmit       = this.handleSubmit.bind(this);\r\n        this.handleTimeChange   = this.handleTimeChange.bind(this);\r\n        this.handleTitleChange  = this.handleTitleChange.bind(this);\r\n    };\r\n\r\n    componentWillMount(){\r\n        Modal.setAppElement('body');\r\n    }\r\n\r\n    openModal(){\r\n        this.setState({modalIsOpen:true});\r\n    }\r\n\r\n    closeModal(){\r\n        this.setState({modalIsOpen:false});\r\n    }\r\n\r\n    afterOpenModal(){\r\n        this.subtitle.style.color = '#f00';\r\n    }\r\n\r\n    handleTimeChange(e){\r\n        this.setState({time: e.target.value});\r\n    }\r\n\r\n    handleTitleChange(e){\r\n        this.setState({title: e.target.value});\r\n    }\r\n    handleSubmit(e){\r\n        console.log(\"info submitted\");\r\n        console.log(this.state.title);\r\n        console.log(this.state.time);\r\n        axios({\r\n            method: 'post',\r\n            url: weblinks.link.addDailies,\r\n            data: {\r\n                username:       credentials.user.username,\r\n                token:          credentials.user.token,\r\n                title:          this.state.title,\r\n                resetTime:      this.state.time,\r\n            },\r\n        })\r\n        .then(function (response){\r\n            console.log('success');\r\n            this.props.updateAdd(this.state.title,this.state.time);\r\n            console.log(response);\r\n        }.bind(this))\r\n        .catch(function (error){\r\n            console.log(error);\r\n        });\r\n        this.closeModal();\r\n    }\r\n    render(){\r\n        let button;\r\n        if(this.props.showAddButton){\r\n            button = <button type=\"button\" onClick={this.openModal}>Click to edit dailies</button>;\r\n        }\r\n        return(\r\n            <div>\r\n                <h1>{button}</h1>\r\n                <Modal\r\n                    isOpen={this.state.modalIsOpen}\r\n                    onAfterOpen={this.state.afterOpenModal}\r\n                    onRequestClose={this.closeModal}\r\n                    style={customStyles}\r\n                    contentLabel=\"Modify daily menu\"\r\n                >\r\n                    <h2 ref={subtitle => this.subtitle = subtitle}>Add Game Daily</h2>\r\n                      <button onClick={this.closeModal}>close</button>\r\n                      <div>Please input daily name and time of reset</div>\r\n                        <input type='text' name='title' onChange={this.handleTitleChange}/>\r\n                        <input type=\"time\" name='time'onChange={this.handleTimeChange}/>\r\n                        <input type='submit' value='submit' onClick={this.handleSubmit}/>\r\n                      <div>\r\n                        <ModalContainer data={this.props.data} updateRemove={this.props.updateRemove}/>\r\n                      </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAddDailyInformation.defaultProps = {\r\n    showAddButton: true\r\n};\r\n\r\nclass DailyInformation extends Component {\r\n    render(){\r\n        const rows = [];\r\n        console.log(\"dailyInformation\");\r\n        //console.log(this.props.data);\r\n        this.props.data.forEach((data)=>{\r\n            rows.push(\r\n                <DailyRow data={data.fields} key={data.fields.title}/>\r\n            );\r\n            console.log(data.fields.title);\r\n        })\r\n        return(\r\n            <table>\r\n                <thread>\r\n                    <tr>\r\n                        <th>Title</th>\r\n                        <th>Is completed</th>\r\n                    </tr>\r\n                </thread>\r\n                <tbody>{rows}</tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nclass DailyDataBox extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.updateRemove = this.updateRemove.bind(this);\r\n        this.updateAdd    = this.updateAdd.bind(this);\r\n    }\r\n\r\n    state = {\r\n        dailyData:[]\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios({\r\n            method: 'post',\r\n            url: weblinks.link.getDailies,\r\n            data: {\r\n                username: credentials.user.username,\r\n                token: credentials.user.token,\r\n            },\r\n        })\r\n        .then(function (response){\r\n            //okay reponse on accept and fail here\r\n            //console.log(response);\r\n            if(response.data != \"incorrect username or password\"){\r\n                this.setState({dailyData:response.data});\r\n            }\r\n        }.bind(this))\r\n        .catch(function (error){\r\n            //if error do just clear fields and display mismatch user or password\r\n            console.log(error);\r\n        });\r\n    }\r\n    updateRemove(removed){\r\n        var updateData = this.state.dailyData;\r\n        for(let i = 0; i < updateData.length; i++){\r\n            console.log(updateData[i].fields.title);\r\n            if(removed == updateData[i].fields.title){\r\n                updateData.splice(i,1)\r\n                this.setState({dailyData: updateData});\r\n            }\r\n        }\r\n    }\r\n\r\n    updateAdd(title,time){\r\n        var updateAddedDaily = {fields:{title:title,reset:null,resetTime:time}};\r\n        this.state.dailyData.push(updateAddedDaily);\r\n        this.setState({dailyData:this.state.dailyData})\r\n    }\r\n\r\n    render(){\r\n        //console.log(\"token\");\r\n        //console.log(credentials.user.token);\r\n        //console.log(this.state.dailyData);\r\n        return(\r\n            <div>\r\n                <DailyInformation data={this.state.dailyData}/>\r\n                <AddDailyInformation showAddButton={this.props.showAddButton} data={this.state.dailyData} updateRemove={this.updateRemove} updateAdd={this.updateAdd}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DailyDataBox;\r\n\n\n\n// WEBPACK FOOTER //\n// pages/dailydata.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;AAeA;AACA;AACA;AAAA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAHA;AAUA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAtCA;AACA;AACA;AAuCA;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;;;;;;AAIA;AACA;AAAA;AAAA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;AAhBA;AACA;AAkBA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;;;AACA;;;AAGA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAnBA;AACA;AAqBA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAZA;AAaA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAHA;AAWA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA1FA;AACA;AA4FA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAtBA;AACA;AAwBA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAOA;AADA;AANA;AAEA;AACA;AAHA;AAIA;AACA;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AASA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA3DA;AACA;AA6DA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}